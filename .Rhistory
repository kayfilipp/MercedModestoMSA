#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate)
VAR.select
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate)
y_tot = data.frame(cbind(modesto.estimate,merced.estimate))
VAR.select(y_tot,ic="sic")
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate)
y_tot = data.frame(cbind(modesto.estimate,merced.estimate))
VAR.select(y_tot,pmax=20,ic="sic")
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate)
y_tot = data.frame(cbind(modesto.estimate,merced.estimate))
VAR.select(y_tot,pmax=20,ic="sc")
length(modesto.estimate)
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate)
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
VAR.select(y_tot,pmax=20,ic="sc") #=>15
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
VAR.select(y_tot,pmax=20,ic="sc") #=>15
cor(modesto.estimate,merced.estimate)
require('forecast')
require('tseries')
require('VAR.etp')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
VAR.select(y_tot,pmax=20,ic="sc") #=>15
y_model = VAR(y_tot,p=4)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
VAR.select(y_tot,pmax=20,ic="sc") #=>15
y_model = VAR(y_tot,p=4)
summary(y_model)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
VAR.select(y_tot,pmax=20,ic="sc") #=>15
y_model = VAR(y_tot,p=15)
summary(y_model)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
y_model = VAR(y_tot,p=15)
summary(y_model)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
y_model = VAR(y_tot,p=15)
summary(y_model)
tsdisplay(residuals(y_model))
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
y_model = VAR(y_tot,p=15)
summary(y_model)
tsdisplay(y_model$varresult$merced.estimate$residuals,main="Residuals for merced VAR-15")
tsdisplay(y_model$varresult$modesto.estimate$residuals,main="Residuals for modesto VAR-15")
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
require('fpp2')
install.packages("tis")
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
require('fpp2')
require('tis')
plot(merced.residuals,ylab="HPI",xlab="Time")
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
plot(merced.residuals,ylab="HPI",xlab="Time")
nberShade()
plot(merced.residuals,ylab="HPI",xlab="Time")
nberShade()
plot(merced.residuals)
nberShade()
plot(merced.residuals)
nberShade()
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
autoplot(merced.residuals)
tsdisplay(merced.residuals)
nberShade()
merced.residuals <- ts(y_model$varresult$merced.estimate$residuals,start=c(1975,1),freq=12)
modesto.residuals <-ts( y_model$varresult$modesto.estimate$residuals,start=c(1975,1),freq=12)
autoplot(merced.residuals)
nberShade()
plot(merced.residuals)
nberShade()
summary(y_model)
merced.residuals <- ts(y_model$varresult$merced.estimate$residuals,start=c(1975,1),freq=12)
modesto.residuals <-ts( y_model$varresult$modesto.estimate$residuals,start=c(1975,1),freq=12)
autoplot(merced.residuals)
nberShade()
autoplot(merced.residuals)
nberShade()
adf.test(merced.residuals)
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
Box.test(merced.residuals)
Box.test(modesto.residuals)
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
y_model = VAR(y_tot,p=7)
summary(y_model)
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
adf.test(merced.residuals)
adf.test(modesto.residuals)
y_model = VAR(y_tot,p=15)
#summary(y_model)
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
adf.test(merced.residuals)
adf.test(modesto.residuals)
knitr::opts_chunk$set(echo = TRUE)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
require('fpp2')
require('tis')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
y_model = VAR(y_tot,p=15)
#summary(y_model)
merced.residuals <- y_model$varresult$merced.estimate$residuals
modesto.residuals <- y_model$varresult$modesto.estimate$residuals
adf.test(merced.residuals)
adf.test(modesto.residuals)
#we can conclude that the residuals are stationary, and therefore the model fit is sufficient.
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
require('fpp2')
require('tis')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
plot(modesto.estimate,main="Modesto vs Merced")
lines(merced.estimate,col='red')
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
autoplot(modesto.estimate)+autolayer(merced.estimate,series="Merced")
autoplot(modesto.estimate,series="Modesto")+autolayer(merced.estimate,series="Merced")
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
ccf(modesto.estimate,merced.estimate) #best correlation at lag zero!
autoplot(modesto.estimate,series="Modesto")+autolayer(merced.estimate,series="Merced")
ar1<-arima(modesto.estimate,order=c(1,0,0))
autoplot(modesto.estimate) + autolayer(fitted(ar1))
plot(ar1$residuals)
adf.test(ar1$residuals)
hpiList<-read.csv("MSA.csv",header=T)
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
recession <- ts(hpiList$Dummy,start=c(1975,1),freq=12)
#prediction and estimation samples for HPI
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
recession.estimate = window(recession,start=c(1975,1),end=c(2018,4),freq=12)
recession.predict = window(recession,start=c(2018,5),freq=12)
plot(recession.estimate)
m.joint <- arima(merced.estimate,order=c(1,0,0),xreg = recession.estimate)
summary(m.joint)
plot(merced.estimate)
lines(fitted(m.joint),col='red')
lines(fitted(ar1),col='blue')
AIC(ar1)
AIC(m.joint)
BIC(ar1)
BIC(m.joint)
adf.test(m.joint$residuals)
adf.test(ar1)
adf.test(ar1$residuals)
modesto.lm = lm(modesto.estimate ~ merced.estimate)
plot(modesto.estimate)
lines(modesto.lm$fitted.values,col='red')
summary(modesto.lm)
AIC(modesto.estimate)
AIC(modesto.lm)
AIC(ar1)
plot(modesto.lm$residuals)
require('dynlm')
m1<-dynlm(modesto.estimate ~ L(modesto.estimate)+merced.estimate + L(merced.estimate))
plot(residuals(m1))
AIC(m1)
adf.test(m1)
adf.test(m1$residuals)
autoplot(m1.residuals)+autolayer(ar1$residuals)
autoplot(m1$residuals)+autolayer(ar1$residuals)
autoplot(m1$residuals)+autolayer(ar1$residuals)+autolayer(m.joint$residuals)
m2<-dynlm(modesto.estimate ~ L(modesto.estimate)+merced.estimate + L(merced.estimate) + recession.estimate)
AIC(m1)
AIC(m2)
autoplot(m1$residuals)+autolayer(ar1$residuals)+autolayer(m.joint$residuals)+autolayer(m2$residuals)
autoplot(m1$residuals,series="m1 residuals")+autolayer(ar1$residuals)+autolayer(m.joint$residuals)+autolayer(m2$residuals)
y_tot = data.frame(cbind(merced.estimate,modesto.estimate))
var1 = VAR(y_tot,p=1)
autoplot(m1$residuals,series="m1 residuals")+autolayer(ar1$residuals)+autolayer(m.joint$residuals)+autolayer(m2$residuals)+autolayer(var1$varresult$modesto.estimate$residuals)
autoplot(m1$residuals,series="m1 residuals")+autolayer(ar1$residuals)+autolayer(m.joint$residuals)+autolayer(m2$residuals)+autolayer(residuals(var1$varresult$modesto.estimate))
summary(var1$varresult$modesto.estimate)
var1 = VAR(y_tot,p=2)
summary(var1$varresult$modesto.estimate)
grangertest(y_tot)
grangertest(modesto.estimate ~ merced.estimate,order = 15)
grangertest(merced.estimate~modesto.estimate,order=15)
AIC(var1$varresult$merced.estimate)
AIC(var1$varresult$modesto.estimate)
AIC(m1)
ar1 = arima(modesto.estimate,c=(1,0,0))
ar1 = arima(modesto.estimate , c=(1,0,0))
ar1 = arima(modesto.estimate , order=(1,0,0))
ar1 = arima(modesto.estimate , order=c(1,0,0))
AIC(ar1)
require('forecast')
require('tseries')
require('VAR.etp')
require('vars')
require('fpp2')
require('tis')
hpiList<-read.csv("MSA.csv",header=T)
merced.gdp<-read.csv("GDPMerced.csv",header=T)
modesto.gdp<-read.csv("GDPModesto.csv",header=T)
#hpi and gdp declaration
merced.hpi <- ts(hpiList$Merced,start=c(1975,1),freq=12)
modesto.hpi<- ts(hpiList$Modesto,start=c(1975,1),freq=12)
merced.gdp<-ts(merced.gdp$RGMP32900,start=2001,freq=1)
modesto.gdp<-ts(modesto.gdp$RGMP33700,start=2001,freq=1)
recession <- ts(hpiList$Dummy,start=c(1975,1),freq=12)
#prediction and estimation samples for HPI and recession
modesto.estimate = window(modesto.hpi,start=c(1975,1),end=c(2018,4),freq=12)
modesto.predict = window(modesto.hpi,start=c(2018,5),freq=12)
merced.estimate = window(merced.hpi,start=c(1975,1),end=c(2018,4),freq=12)
merced.predict = window(merced.hpi,start=c(2018,5),freq=12)
recession.estimate = window(recession,start=c(1975,1),end=c(2018,4),freq=12)
recession.predict = window(recession,start=c(2018,5),freq=12)
#individual and joint graphs of HPI prices.
tsdisplay(modesto.estimate,main="Modesto HPI")
tsdisplay(merced.estimate,main="Merced HPI")
autoplot(modesto.estimate,series="Modesto")+autolayer(merced.estimate,series="Merced")
x = stl(modesto.estimate)
x = stl(modesto.estimate,s.window='periodic')
plot(x)
auto.arima(modesto.estimate)
tsdisplay(diff(modesto.estimate))
auto.arima(diff(modesto.estimate))
ar1 <- arma(modesto.estimate,order=c(1,0))
AIC(ar1)
ar1<-arima(modesto.estimate,order=c(1,0,0))
AIC(ar1)
adf.test(diff(modesto.estimate))
m1<-arima(modesto.estimate,order=c(15,1,0),seasonal=list(order=c(1,0,0)))
AIC(m1)
adf.test(modesto.estimate)
adf.test(merced.estimate)
Box.test(merced.estimate)
Box.test(modesto.estimate)
Box.test(meced.estimate)
Box.test(modesto.estimate)
Box.test(merced.estimate)
#H0: serial correlation
Box.test(diff(modesto.estimate))
require('aTSA')
stationary.test(modesto.estimate)
stationary.test(modesto.estimate,method="kpss")
kpss.test(modesto.estimate)
cars
plot(cars)
adf.test(diff(modesto.estimate))
